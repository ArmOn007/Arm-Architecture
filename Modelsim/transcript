# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# OpenFile {D:/Users/arman/Documents/Uni/Term8/Computer Architecture Lab/Arm-Architecture/Modelsim/arm.mpf} 
# Loading project arm
# Compile of ALU.v was successful.
# Compile of ARM.v was successful.
# Compile of ARM_cpu.v was successful.
# Compile of ARM_Testbench.v was successful.
# Compile of ConditionCheck.v was successful with warnings.
# Compile of ControlUnit.v was successful with warnings.
# Compile of EXE_Stage.v was successful.
# Compile of EXE_Stage_Reg.v was successful.
# Compile of Fowarding_Unit.v was successful.
# Compile of Hazard_Detection_Unit.v was successful.
# Compile of Hazard_Detection_Unit2.v was successful.
# Compile of ID_Stage.v was successful.
# Compile of ID_Stage_Reg.v was successful.
# Compile of IF_Stage.v was successful.
# Compile of IF_Stage_Reg.v was successful.
# Compile of InstMemory.v was successful.
# Compile of MEM_Stage_Reg.v was successful.
# Compile of Mux2to1.v was successful.
# Compile of Mux4to1.v was successful.
# Compile of Q_ARM_Testbench.v was successful.
# Compile of Register.v was successful.
# Compile of RegisterFile.v was successful.
# Compile of SRAM.v was successful.
# Compile of SRAM_Controller.v was successful.
# Compile of Status_Reg.v was successful.
# Compile of Val2_Ganerator.v was successful.
# Compile of WB_Stage.v was successful.
# Compile of ARM.vo was successful.
# 28 compiles, 0 failed with no errors. 
vsim -gui work.ARM_Testbench
# vsim -gui work.ARM_Testbench 
# Loading work.ARM_Testbench
# Loading work.ARM_cpu
# Loading work.IF_Stage
# Loading work.Register
# Loading work.Mux2to1
# Loading work.InstMemory
# Loading work.IF_Stage_Reg
# Loading work.ID_Stage
# Loading work.ControlUnit
# Loading work.ConditionCheck
# Loading work.RegisterFile
# Loading work.Hazard_Detection_Unit
# Loading work.Hazard_Detection_Unit2
# Loading work.ID_Stage_Reg
# Loading work.EXE_Stage
# Loading work.ALU
# Loading work.Val2_Generator
# Loading work.Mux4to1
# Loading work.EXE_Stage_Reg
# Loading work.Status_Reg
# Loading work.Forwarding_Unit
# Loading work.SRAM_Controller
# Loading work.SRAM
# Loading work.MEM_Stage_Reg
# Loading work.WB_Stage
add wave -position end  sim:/ARM_Testbench/clk
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
# 
#           File in use by: Asus  Hostname: DESKTOP-BPTA122  ProcessID: 22616
# 
#           Attempting to use alternate WLF file "./wlft4twy7e".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
# 
#           Using alternate file: ./wlft4twy7e
# 
add wave -position end  sim:/ARM_Testbench/arm/instruction_if
add wave -position end  sim:/ARM_Testbench/arm/pc_if
add wave -position end  sim:/ARM_Testbench/arm/rf0
add wave -position end  sim:/ARM_Testbench/arm/rf1
add wave -position end  sim:/ARM_Testbench/arm/rf10
add wave -position end  sim:/ARM_Testbench/arm/rf11
add wave -position end  sim:/ARM_Testbench/arm/rf2
add wave -position end  sim:/ARM_Testbench/arm/rf3
add wave -position end  sim:/ARM_Testbench/arm/rf4
add wave -position end  sim:/ARM_Testbench/arm/rf5
add wave -position end  sim:/ARM_Testbench/arm/rf6
add wave -position end  sim:/ARM_Testbench/arm/rf7
add wave -position end  sim:/ARM_Testbench/arm/sram_addr
add wave -position end  sim:/ARM_Testbench/arm/sram_dq
add wave -position end  sim:/ARM_Testbench/arm/sram_freeze
add wave -position end  sim:/ARM_Testbench/arm/sram_ready
add wave -position end  sim:/ARM_Testbench/arm/sram_we_n
run -all
# register_file[x]=x / time=0
# register_file[0]=0 / time=0
# register_file[0]=0 / time=40
# register_file[0]=0 / time=80
# register_file[0]=0 / time=120
# register_file[0]=0 / time=160
# register_file[1]=1 / time=200
# register_file[2]=2 / time=240
# register_file[3]=3 / time=280
# register_file[4]=4 / time=320
# register_file[5]=5 / time=360
# register_file[6]=6 / time=400
# register_file[7]=7 / time=440
# register_file[8]=8 / time=480
# register_file[9]=9 / time=520
# register_file[10]=10 / time=560
# register_file[0]=20 / time=600
# register_file[1]=4096 / time=640
# register_file[0]=20 / time=680
# register_file[2]=3221225472 / time=720
# register_file[0]=20 / time=760
# register_file[0]=1024 / time=800
# register_file[0]=1024 / time=840
# register_file[0]=1024 / time=880
# register_file[0]=1024 / time=920
# register_file[0]=1024 / time=960
# register_file[1]=8192 / time=1000
# register_file[1]=8192 / time=1040
# register_file[1]=8192 / time=1080
# register_file[1]=8192 / time=1120
# register_file[1]=8192 / time=1160
# register_file[1]=8192 / time=1200
# register_file[11]=11 / time=1240
# register_file[11]=8192 / time=1280
# register_file[11]=8192 / time=1320
# register_file[11]=8192 / time=1360
# register_file[11]=8192 / time=1400
# register_file[11]=8192 / time=1440
# register_file[2]=3221225472 / time=1480
# register_file[2]=3221225472 / time=1520
# register_file[2]=3221225472 / time=1560
# register_file[2]=3221225472 / time=1600
# register_file[2]=3221225472 / time=1640
# register_file[2]=3221225472 / time=1680
# register_file[3]=2147483648 / time=1720
# register_file[3]=2147483648 / time=1760
# register_file[3]=2147483648 / time=1800
# register_file[3]=2147483648 / time=1840
# register_file[3]=2147483648 / time=1880
# register_file[3]=2147483648 / time=1920
# register_file[4]=41 / time=1960
# register_file[4]=41 / time=2000
# register_file[4]=41 / time=2040
# register_file[4]=41 / time=2080
# register_file[4]=41 / time=2120
# register_file[4]=41 / time=2160
# register_file[5]=4294967173 / time=2200
# register_file[5]=4294967173 / time=2240
# register_file[5]=4294967173 / time=2280
# register_file[5]=4294967173 / time=2320
# register_file[5]=4294967173 / time=2360
# register_file[5]=4294967173 / time=2400
# register_file[6]=10 / time=2440
# register_file[6]=10 / time=2480
# register_file[6]=10 / time=2520
# register_file[6]=10 / time=2560
# register_file[6]=10 / time=2600
# register_file[6]=10 / time=2640
# register_file[10]=4294967212 / time=2680
# register_file[10]=3221225472 / time=2720
# register_file[10]=3221225472 / time=2760
# register_file[10]=3221225472 / time=2800
# register_file[10]=3221225472 / time=2840
# register_file[10]=3221225472 / time=2880
# register_file[7]=4294967173 / time=2920
# register_file[1]=8192 / time=2960
# register_file[2]=3221225472 / time=3000
# register_file[15]=x / time=3040
# register_file[0]=1024 / time=3080
# register_file[0]=1024 / time=3120
# register_file[15]=x / time=3160
# register_file[0]=1024 / time=3200
# register_file[0]=1024 / time=3240
# register_file[15]=x / time=3280
# register_file[0]=1024 / time=3320
# register_file[0]=1024 / time=3360
# register_file[15]=x / time=3400
# register_file[0]=1024 / time=3440
# register_file[0]=1024 / time=3480
# register_file[15]=x / time=3520
# register_file[0]=1024 / time=3560
# register_file[0]=1024 / time=3600
# register_file[15]=x / time=3640
# register_file[0]=1024 / time=3680
# register_file[0]=1024 / time=3720
# register_file[15]=x / time=3760
# register_file[0]=1024 / time=3800
# register_file[0]=1024 / time=3840
# register_file[15]=x / time=3880
# register_file[0]=1024 / time=3920
# register_file[0]=1024 / time=3960
# register_file[15]=x / time=4000
# Break in Module ARM_Testbench at D:/Users/arman/Documents/Uni/Term8/Computer Architecture Lab/Arm-Architecture/Codes/ARM_Testbench.v line 13
